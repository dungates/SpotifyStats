cityweatherData("Corvallis")
class(cityDaily)
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
# Gets one year of temperature data
#cityDailyTemp <- something
return(cityDailyPrecip)
}
cityweatherData("Corvallis")
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .Globalenv)
view(cityDailyPrecip)
}
cityweatherData("Corvallis")
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
view(cityDailyPrecip)
}
cityweatherData("Corvallis")
?view
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
dplyr::view(cityDailyPrecip)
}
cityweatherData("Corvallis")
?view
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
tibble::view(cityDailyPrecip)
}
cityweatherData("Corvallis")
cityDailyTemp <- ncdc(datasetid = 'NORMAL_DLY', datatypeid = 'dly-tmax-normal', stationid = stationID$id,
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
View(cityDailyPrecip)
str(cityDailyPrecip)
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd(date), y = value)) + geom_line()
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
tibble::view(cityDailyPrecip)
precipGraph
}
cityweatherData("Corvallis")
library(ggplot2)
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd(date), y = value)) + geom_line()
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
tibble::view(cityDailyPrecip)
precipGraph
}
cityweatherData("Corvallis")
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd(date), y = value)) + geom_line()
precipGraph
View(cityDailyPrecip)
str(cityDailyPrecip)
ymd(cityDailyPrecip$date)
ymd_hms(cityDailyPrecip$date)
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd_hms(date), y = value)) + geom_line()
precipGraph
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd_hms(date), y = value)) + geom_line()
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
tibble::view(cityDailyPrecip)
precipGraph
}
cityweatherData("Corvallis")
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd_hms(date), y = value)) + geom_line() +
ggtitle(paste("Daily Precipation of Last Year in", city)) + labs(x = "Date", y = paste(units))
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
tibble::view(cityDailyPrecip)
precipGraph
}
cityweatherData("Corvallis")
str(cityDailyPrecip)
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd_hms(date), y = value)) + geom_line() +
ggtitle(paste("Daily Precipation of Last Year in", city)) + labs(x = "Date", y = units)
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
tibble::view(cityDailyPrecip)
precipGraph
}
cityweatherData("Corvallis")
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd_hms(date), y = value)) + geom_line() +
ggtitle(paste("Daily Precipation of Last Year in", city)) + labs(x = "Date") + scale_y_discrete(labels = unique(units))
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
tibble::view(cityDailyPrecip)
precipGraph
}
cityweatherData("Corvallis")
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd_hms(date), y = value)) + geom_line() +
ggtitle(paste("Daily Precipation of Last Year in", city)) + labs(x = "Date") + scale_y_discrete(labels = unique(cityDailyPrecip$units))
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
tibble::view(cityDailyPrecip)
precipGraph
}
cityweatherData("Corvallis")
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd_hms(date), y = value)) + geom_line() +
ggtitle(paste("Daily Precipation of Last Year in", city)) + labs(x = "Date", y = "Tenths of a Milimeter") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
tibble::view(cityDailyPrecip)
precipGraph
}
cityweatherData("Corvallis")
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd_hms(date), y = value*10*2.54)) + geom_line() +
ggtitle(paste("Daily Precipation of Last Year in", city)) + labs(x = "Date", y = "Inches") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
tibble::view(cityDailyPrecip)
precipGraph
}
cityweatherData("Corvallis")
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd_hms(date), y = value/10*2.54)) + geom_line() +
ggtitle(paste("Daily Precipation of Last Year in", city)) + labs(x = "Date", y = "Inches") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
tibble::view(cityDailyPrecip)
precipGraph
}
cityweatherData("Corvallis")
cityweatherData <- function(city) {
# Fetches list of cities
var <- ncdc_locs(locationcategoryid = c('CITY'), sortfield = 'name', sortorder = 'asc', limit = 1000)$data
citySelected <- test %>% dplyr::filter(grepl(as.character(city), name))
# Fetches station id list with temperature data
var2 <- ncdc_stations(datasetid='GHCND', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
# Gets mindate and maxdate of station
stationID = var2 %>% dplyr::filter(datacoverage == max(datacoverage))
# Gets one year of preciptation data cause apparently thats the max you can get
cityDailyPrecip <- ncdc(datasetid = 'GHCND', stationid = stationID$id, datatypeid = 'PRCP',
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyPrecip <- as.data.frame(cityDailyPrecip)
precipGraph <- cityDailyPrecip %>% ggplot(aes(x = ymd_hms(date), y = value*0.03937)) + geom_line() +
ggtitle(paste("Daily Precipation of Last Year in", city)) + labs(x = "Date", y = "Inches") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
# Gets one year of temperature data
#cityDailyTemp <- something
assign("cityDailyPrecip", cityDailyPrecip, envir = .GlobalEnv)
tibble::view(cityDailyPrecip)
precipGraph
}
cityweatherData("Corvallis")
out <- ncdc(datasetid='GHCND', stationid='GHCND:USW00004236', datatypeid='PRCP',
startdate = '2011-01-01', enddate = '2019-12-11', limit = 300, add_units = T)$data
cityDailyTemp <- ncdc(datasetid = 'GHCND', datatypeid = 'dly-tmax-normal', stationid = stationID$id,
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
cityDailyTemp <- ncdc(datasetid = 'GHCND', datatypeid = 'PRCP', stationid = stationID$id,
startdate = (ymd(stationID$maxdate) - years(1)),
enddate = ymd(stationID$maxdate), limit = 1000, add_units = T)$data
ncdc_stations(datasetid='NORMAL_DLY', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
ncdc(datasetid = 'NORMAL_DLY', datatypeid = 'dly-tmax-normal', stationid = 'GHCND:USW00004236', startdate = '2009-09-11',
enddate = '2009-09-15', limit = 300)
cityweatherData("Portland")
cityweatherData("Seattle")
cityweatherData("Corvallis")
View(cityDailyPrecip)
ncdc_stations(datasetid='NORMAL_DLY', locationid=citySelected$id, datatypeid = 'dly-tmax-normal')$data
out <- ncdc(datasetid='NORMAL_DLY', stationid='GHCND:USW00004236', datatypeid='dly-tmax-normal',
startdate = '2019-01-01', enddate = '2019-12-11', limit = 300, add_units = T)$data
now()
library(rvest)
library(curl)
library(tidyverse)
library(httr)
?url_success
?bind_rows
memory.limit()
?memory.limit
getwd()
setwd("/Users/dunk/SpotifyStats")
getwd()
library(readr)
library(dplyr)
library(ggplot2)
setwd("/Users/dunk/SpotifyStats")
bb <- read_csv("datasets/bb_chords.csv")
bb_count <- bb %>% count(chord) %>% arrange(desc(n))
# Displaying the top 20 chords
head(bb_count, 20)
library(readr)
library(dplyr)
library(ggplot2)
library(stringr)
setwd("/Users/dunk/SpotifyStats")
bb <- read_csv("datasets/bb_chords.csv")
bb_count <- bb %>% count(chord) %>% arrange(desc(n))
# Displaying the top 20 chords
head(bb_count, 20)
# Creating a bar plot from bb_count
bb_count %>%
slice(1:20) %>%
mutate(share = n/sum(n),
chord = reorder(chord, share)) %>%
ggplot(aes(x = chord, y = share, fill = chord)) +
geom_col() +
coord_flip() +
xlab("Share of Total Chords") +
ylab("Chord") +
theme(legend.position = "none")
# A chord change is simply a bigram — a two-"word" phrase — composed of a starting chord and a following chord.
# Wrangling and counting bigrams
bb_bigram_count <- bb %>% mutate(next_chord = lead(chord, 1), next_title = lead(title, 1)) %>%
mutate(bigram = str_c(chord, next_chord, sep = " ")) %>% filter(title == next_title) %>%
count(bigram) %>% arrange(desc(n))
# Displaying the first 20 rows of bb_bigram_count
head(bb_bigram_count, 20)
# Visualizing the most common chord progressions
# Creating a column plot from bb_bigram_count
bb_bigram_count %>%
slice(1:20) %>%
mutate(share = n/sum(n),
bigram = reorder(bigram, share)) %>% arrange(desc(n)) %>%
ggplot(aes(share, bigram, fill = bigram)) +
geom_col() +
coord_flip() +
xlab("Share of Chord Changes") +
ylab("Chord Changes") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Finding the most common artists
# Finding 30 artists with the most songs in the corpus
bb_30_artists <- bb %>% select(artist, title) %>% unique() %>% count(artist, sort = T)
#.... YOUR CODE FOR TASK 6 ....
# Displaying 30 artists with the most songs in the corpus
head(bb_30_artists, 30)
# Dataframe of artists by instrument
tags <- tibble(
artist = c('Abba', 'Billy Joel', 'Elton John', 'Stevie Wonder', 'The Rolling Stones', 'The Beatles', 'Eric Clapton'),
instrument = c('piano', 'piano', 'piano', 'piano', 'guitar', 'guitar', 'guitar'))
# Creating a new dataframe bb_tagged that includes a new column instrument from tags
bb_tagged <- bb %>% inner_join(tags, by = "artist")
# .... YOUR CODE FOR TASK 7 ....
# Displaying the new data frame
bb_tagged
# The top 20 most common chords
top_20 <- bb_count$chord[1:20]
# Comparing the frequency of the 20 most common chords in piano- and guitar-driven songs
bb_tagged %>%
filter(chord %in% top_20) %>%
count(chord, instrument, sort = T) %>%
ggplot(aes(x = chord, y = n, fill = chord)) +
geom_col() +
facet_grid( ~ instrument) +
coord_flip() +
xlab("Chords") +
ylab("Frequency of Chords") +
theme(legend.position = "none") + ggtitle("Chords by Instrument")
bb_tagged %>%
filter(chord %in% top_20) %>%
count(chord, artist, sort = T) %>%
ggplot(aes(x = chord, y = n, fill = chord)) +
geom_col() +
facet_grid( ~ artist) +
coord_flip() +
xlab("Chords") +
ylab("Frequency of Chords") +
theme(legend.position = "none") + ggtitle("Chords by Artist")
# The top 20 most common bigrams
top_20_bigram <- bb_bigram_count$bigram[1:20]
# Creating a faceted plot comparing guitar- and piano-driven songs for bigram frequency
bb_tagged %>% mutate(next_chord = lead(chord, 1), next_title = lead(title, 1),
bigram = str_c(chord, next_chord, sep = " ")) %>%
filter(title == next_title) %>% count(bigram, instrument, sort = T) %>%
filter(bigram %in% top_20_bigram) %>%
ggplot(aes(x = bigram, y = n, fill = bigram))+
geom_col()+
coord_flip() +
xlab("Bigram") +
ylab("Instruments") +
facet_grid(~instrument) +
theme(legend.position = "none")
# .... MODIFIED CODE FROM TASK 4 ....
# .... MODIFIED CODE FROM TASK 8 ....
# Displaying the first 20 rows of bb_bigram_count
head(bb_bigram_count, 20)
# Creating a faceted plot comparing guitar- and piano-driven songs for bigram frequency
bb_tagged %>% mutate(next_chord = lead(chord, 1), next_title = lead(title, 1),
bigram = str_c(chord, next_chord, sep = " ")) %>%
filter(title == next_title) %>% count(bigram, instrument, sort = T) %>%
filter(bigram %in% top_20_bigram) %>%
ggplot(aes(x = bigram, y = n, fill = bigram))+
geom_col()+
coord_flip() +
xlab("Bigram") +
ylab("Instruments") +
facet_grid(~instrument) +
theme(legend.position = "none")
?loadfonts
library(loadfonts)
install.packages("loadfonts")
